export const ejercicios = [
  {
    id: 1,
    titulo: "Variables y Tipos B√°sicos",
    instrucciones: `
      Conceptos b√°sicos de JavaScript:
  
      1. ¬øQu√© es una variable?
      2. ¬øC√≥mo crear una variable con let?
      3. ¬øC√≥mo crear una constante?
      4. ¬øC√≥mo guardar un texto en una variable?
      5. ¬øC√≥mo guardar un n√∫mero en una variable?
      `,
  },
  {
    id: 2,
    titulo: "Operaciones B√°sicas",
    instrucciones: `
      Operaciones simples en JavaScript:
  
      1. ¬øC√≥mo sumar dos n√∫meros?
      2. ¬øC√≥mo multiplicar dos n√∫meros?
      3. ¬øC√≥mo unir dos textos?
      4. ¬øC√≥mo saber si un n√∫mero es mayor que otro?
      5. ¬øC√≥mo saber si dos valores son iguales?
      `,
  },
  {
    id: 3,
    titulo: "Trabajando con Arrays",
    instrucciones: `
      Arrays (listas) en JavaScript:
  
      1. ¬øC√≥mo crear una lista vac√≠a?
      2. ¬øC√≥mo crear una lista con nombres?
      3. ¬øC√≥mo agregar un elemento a una lista?
      4. ¬øC√≥mo acceder al primer elemento?
      5. ¬øC√≥mo saber cu√°ntos elementos tiene una lista?
      `,
  },
];

// Agregamos las respuestas para cada ejercicio
export const respuestas = [
  {
    id: 1,
    codigo: `
  // 1. Una variable es como una caja donde guardamos informaci√≥n
  
  // 2. Crear una variable con let:
  let edad = 25;
  
  // 3. Crear una constante:
  const nombre = "Juan";
  
  // 4. Guardar un texto:
  let mensaje = "Hola mundo";
  
  // 5. Guardar un n√∫mero:
  let precio = 99.99;
  
  // Ejemplos de uso:
  console.log(mensaje); // Muestra: Hola mundo
  console.log(precio); // Muestra: 99.99`,
    descripcion: `
  üîç Conceptos utilizados:
  
  ‚Ä¢ let: Para crear variables que pueden cambiar su valor
  ‚Ä¢ const: Para crear variables que no cambiar√°n su valor
  ‚Ä¢ Tipos de datos: 
    - Texto (string): Se escribe entre comillas "..."
    - N√∫meros: Se escriben directamente sin comillas
  ‚Ä¢ console.log(): Para mostrar valores en la consola
      `,
  },
  {
    id: 2,
    codigo: `
  // 1. Sumar n√∫meros:
  let suma = 5 + 3;  // resultado: 8
  
  // 2. Multiplicar n√∫meros:
  let multiplicacion = 4 * 2;  // resultado: 8
  
  // 3. Unir textos:
  let nombre = "Juan";
  let saludo = "Hola " + nombre;  // resultado: "Hola Juan"
  
  // 4. Comparar si es mayor:
  let esMayor = 10 > 5;  // resultado: true
  
  // 5. Comparar si son iguales:
  let sonIguales = 5 === 5;  // resultado: true`,
    descripcion: `
  üîç Conceptos utilizados:
  
  ‚Ä¢ Operadores aritm√©ticos: + (suma), * (multiplicaci√≥n)
  ‚Ä¢ Concatenaci√≥n: + (para unir textos)
  ‚Ä¢ Operadores de comparaci√≥n:
    - > (mayor que)
    - === (igual a)
  ‚Ä¢ Los resultados de las comparaciones son booleanos (true/false)
      `,
  },
  {
    id: 3,
    codigo: `
  // 1. Crear lista vac√≠a:
  let miLista = [];
  
  // 2. Crear lista con nombres:
  let frutas = ["manzana", "pera", "pl√°tano"];
  
  // 3. Agregar elemento a una lista:
  frutas.push("naranja");
  
  // 4. Acceder al primer elemento:
  let primeraFruta = frutas[0];  // resultado: "manzana"
  
  // 5. Contar elementos:
  let cantidad = frutas.length;  // resultado: 4`,
    descripcion: `
  üîç Conceptos utilizados:
  
  ‚Ä¢ Arrays: Se crean usando corchetes []
  ‚Ä¢ M√©todos de arrays:
    - push(): Agrega elementos al final
    - [0]: Accede al primer elemento (la posici√≥n 0)
  ‚Ä¢ Propiedades:
    - length: Indica cu√°ntos elementos tiene el array
  ‚Ä¢ Los elementos se separan por comas
      `,
  },
];
